---
import { type CollectionEntry, getCollection } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import Note from "@/components/note/Note.astro";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_NOTES_PER_PAGE = 10;
	const allNotes = await getCollection("note");
	return paginate(allNotes.sort(collectionDateSort), { pageSize: MAX_NOTES_PER_PAGE });
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"note">>;
	uniqueTags: string[];
}

const { page } = Astro.props;

const meta = {
	description: "Read my collection of notes",
	title: "Notes"
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← Previous Page",
			url: page.url.prev
		}
	}),
	...(page.url.next && {
		nextUrl: {
			text: "Next Page →",
			url: page.url.next
		}
	})
};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6">Notes</h1>
	<div class="grid gap-y-8 sm:gap-y-12">
		<section class="flex flex-col gap-y-6">
			{page.data.map((note) => <Note note={note} as="h2" isPreview />)}
		</section>
		{page.lastPage > 1 && <Pagination {...paginationProps} />}
	</div>
	<a class="mt-16 inline-flex gap-2 sm:gap-3 text-lg items-center hover:text-accent" href="/notes/rss.xml">
		<Icon class="h-6 w-6" name="mdi:rss" />
		<span>RSS Feed</span>
	</a>
</PageLayout>
