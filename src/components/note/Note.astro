---
import { type CollectionEntry, render } from "astro:content";
import type { HTMLTag, Polymorphic } from "astro/types";
import FormattedDate from "@/components/FormattedDate.astro";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	note: CollectionEntry<"note">;
	isPreview?: boolean | undefined;
};

const { as: Tag = "div", note, isPreview = false } = Astro.props;
const { Content } = await render(note);

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};
---

<article
	class:list={[isPreview && "bg-global-text/5 inline-grid rounded-md px-4 py-3"]}
	data-pagefind-body={isPreview ? false : true}
>
	<Tag class:list={["text-accent-2 font-bold", isPreview ? "text-base md:text-lg" : "title"]}>
		{
			isPreview ? (
				<a class="cactus-link" href={`/notes/${note.id}/`}>
					{note.data.title}
				</a>
			) : (
				<>{note.data.title}</>
			)
		}
	</Tag>
	<div class={isPreview ? "mt-1" : "mt-3"}>
		<p class="font-sans font-medium">
			<FormattedDate {...!isPreview && { dateTimeOptions }} date={note.data.publishDate} />
		</p>
	</div>

	<div
		class:list={[
			"prose mt-4 max-w-none [&>p:last-of-type]:mb-0",
			isPreview ? "prose-sm md:prose-base line-clamp-4" : "prose-lg md:prose-xl",
		]}
	>
		<Content />
	</div>
</article>
